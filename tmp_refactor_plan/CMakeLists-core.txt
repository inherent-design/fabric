# Core library components
set(FABRIC_CORE_COMMON_SOURCE_FILES
    src/core/Component.cc
    src/core/Event.cc
    src/core/Lifecycle.cc
    src/core/Plugin.cc
    src/core/Command.cc
    src/core/Reactive.cc
    src/core/Spatial.cc
    src/core/Temporal.cc
)

# Resource management subsystem
set(FABRIC_CORE_RESOURCE_SOURCE_FILES
    src/core/resource/Resource.cc
    src/core/resource/ResourceHub.cc
    src/core/resource/ResourceLoader.cc
    src/core/resource/ResourceDependencyManager.cc
    src/core/resource/ResourceMemoryManager.cc
    src/core/resource/ResourceThreadPool.cc
)

# Parser subsystem
set(FABRIC_CORE_PARSER_SOURCE_FILES
    src/core/parser/ArgumentParser.cc
    src/core/parser/SyntaxTree.cc
    src/core/parser/Token.cc
)

# UI subsystem
set(FABRIC_CORE_UI_SOURCE_FILES
    src/core/ui/WebView.cc
)

# Main fabric core library
add_library(fabric_core STATIC 
    ${FABRIC_CORE_COMMON_SOURCE_FILES}
    ${FABRIC_CORE_RESOURCE_SOURCE_FILES}
    ${FABRIC_CORE_PARSER_SOURCE_FILES}
    ${FABRIC_CORE_UI_SOURCE_FILES}
)

# Mark public API source files
set_source_files_properties(
    ${FABRIC_CORE_COMMON_SOURCE_FILES}
    ${FABRIC_CORE_RESOURCE_SOURCE_FILES}
    ${FABRIC_CORE_PARSER_SOURCE_FILES}
    ${FABRIC_CORE_UI_SOURCE_FILES}
    PROPERTIES
    COMPILE_DEFINITIONS "FABRIC_CORE_API"
)

# Include directories
target_include_directories(fabric_core 
    PUBLIC 
        ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Library dependencies
target_link_libraries(fabric_core 
    PUBLIC 
        fabric_utils
        Threads::Threads
)

# Add platform-specific dependencies
if(USE_WEBVIEW)
    target_link_libraries(fabric_core 
        PUBLIC 
            webview::core
    )
endif()

if(USE_SDL)
    target_link_libraries(fabric_core 
        PUBLIC 
            SDL3::SDL3-static
    )
endif()